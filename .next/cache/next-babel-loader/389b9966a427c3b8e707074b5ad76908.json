{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\EquipoGG\\\\Documents\\\\GitHub\\\\next-Test\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Container from './../components/container';\nimport fetch from 'isomorphic-fetch';\nimport Card from './../components/cards';\nimport Head from 'next/head';\n\nvar App = function App(_ref) {\n  var users = _ref.users;\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 2\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 2\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, \"Home\")), __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 2\n    }\n  }, \"Github users\"), __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 2\n    }\n  }, __jsx(Card, {\n    users: users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }\n  })));\n};\n\n_c = App;\nApp.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, users;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.github.com/users?since=10');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          users = _context.sent;\n          return _context.abrupt(\"return\", {\n            users: users\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/EquipoGG/Documents/GitHub/next-Test/pages/index.js"],"names":["Container","fetch","Card","Head","App","users","textAlign","getInitialProps","response","json"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,SACX,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADA,EAIA;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,EAKA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAED,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALA,CADW;AAAA,CAAZ;;KAAMD,G;AAWNA,GAAG,CAACG,eAAJ,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACEN,KAAK,CAAC,uCAAD,CADP;;AAAA;AACfO,UAAAA,QADe;AAAA;AAAA,iBAEDA,QAAQ,CAACC,IAAT,EAFC;;AAAA;AAEfJ,UAAAA,KAFe;AAAA,2CAGd;AAACA,YAAAA,KAAK,EAALA;AAAD,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAKA,eAAeD,GAAf","sourcesContent":["import Container from './../components/container'\r\nimport fetch from 'isomorphic-fetch'\r\nimport Card from './../components/cards'\r\nimport Head from 'next/head'\r\nconst App = ({users}) =>(\r\n\t<Container>\r\n\t<Head>\r\n\t\t<title>Home</title>\r\n\t</Head>\r\n\t<h1 style={{textAlign: \"center\"}}>Github users</h1>\r\n\t<div className=\"container\">\r\n\t\t\t<Card users={users}/>\r\n\t</div>\r\n\t</Container>\r\n)\r\nApp.getInitialProps = async () => {\r\n\tconst response = await fetch('https://api.github.com/users?since=10')\r\n\tconst users = await response.json()\r\n\treturn {users}\r\n}\r\nexport default App"]},"metadata":{},"sourceType":"module"}